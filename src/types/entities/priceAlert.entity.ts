// src/types/entities/priceAlert.entity.ts

import { PriceAlertTriggerType } from '../enums'; // Import the enum

/**
 * Represents the structure of a Price Alert record in the database.
 */
export interface PriceAlertEntity {
  id: number;
  user_id: number;
  crop_name: string;
  price_threshold: number;
  trigger_type: PriceAlertTriggerType; // Use the enum for consistency
  region?: string; // Optional: if alerts can be region-specific
  specification?: string; // Optional: if alerts can be specification-specific
  created_at?: string; // Optional, as it might be auto-generated by DB
}

/**
 * Represents the data needed to create a new Price Alert,
 * typically used for insertion into the database where `id` and `created_at` are auto-generated.
 */
export interface NewPriceAlert {
    user_id: number;
    crop_name: string;
    price_threshold: number;
    trigger_type: PriceAlertTriggerType;
    region?: string;
    specification?: string;
}

/**
 * Represents partial data for updating an existing Price Alert.
 * Omits `id` as it's used for identification, and `created_at` as it's usually not updated.
 */
export type UpdatePriceAlert = Partial<Omit<PriceAlertEntity, 'id' | 'created_at'>>;

// Re-export CreatePriceAlertDTO from dtos for convenience if needed by other entities/services
import { CreatePriceAlertDTO } from '../dtos/priceAlert.dto';
export { CreatePriceAlertDTO };
